/* automatically generated by rust-bindgen */

pub const STACK_MAX: u32 = 16_777_212;
pub const ObjectType_OBJ_INT: ObjectType = 0;
pub const ObjectType_OBJ_PAIR: ObjectType = 1;
pub type ObjectType = u32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct sObject {
    pub next: *mut sObject,
    pub marked: ::std::os::raw::c_uchar,
    pub type_: ObjectType,
    pub __bindgen_anon_1: sObject__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union sObject__bindgen_ty_1 {
    pub value: ::std::os::raw::c_int,
    pub __bindgen_anon_1: sObject__bindgen_ty_1__bindgen_ty_1,
    _bindgen_union_align: [u64; 2usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sObject__bindgen_ty_1__bindgen_ty_1 {
    pub head: *mut sObject,
    pub tail: *mut sObject,
}
pub type Object = sObject;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct VM {
    pub numObjects: ::std::os::raw::c_int,
    pub maxObjects: ::std::os::raw::c_int,
    pub firstObject: *mut Object,
    pub stack: [*mut Object; 16_777_212usize],
    pub stackSize: ::std::os::raw::c_int,
}
extern "C" {
    pub fn newVM() -> *mut VM;
}
extern "C" {
    pub fn pop(vm: *mut VM) -> *mut Object;
}
extern "C" {
    pub fn pushInt(vm: *mut VM, intValue: ::std::os::raw::c_int);
}
extern "C" {
    pub fn pushPair(vm: *mut VM) -> *mut Object;
}
extern "C" {
    pub fn freeVM(vm: *mut VM);
}
extern "C" {
    pub fn gc(vm: *mut VM);
}
